<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprBoss</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-500</depth>
  <persistent>-1</persistent>
  <parentName>self</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>freeze = true;
obstaclesRemoved = false;
system=part_system_create();
part_system_depth(system,-100);

part=part_type_create();
part_type_shape(part,pt_shape_disk);
part_type_speed(part,3,5,.1,0);
part_type_colour1(part,c_white);
part_type_life(part,45,60);
part_type_size(part,1.5,2,-.05,0);
part_type_alpha1(part,0.3);


cutsceneAlpha = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(freeze)
{
 var _dir=random(360);
    var _dist=180;
    var _x=x+lengthdir_x(_dist,_dir);
    var _y=y+lengthdir_y(_dist,_dir);
    var _part_dir=point_direction(_x,_y,x,y);
    part_type_direction(part,_part_dir,_part_dir,0,0);
    part_particles_create(system,_x,_y,part,1);
}
else
{
    if(obstaclesRemoved)
    {
        //todo boss fight
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1.0);
draw_self();

if(!obstaclesRemoved &amp;&amp; !freeze &amp;&amp; room == main)
{
    draw_sprite_ext(sprWhite,0,0,0,1576,1576,0,c_white,cutsceneAlpha);
    cutsceneAlpha+=0.007;
    if(cutsceneAlpha &gt;= 0.99)
        room_goto_next();
}
else if(!obstaclesRemoved &amp;&amp; !freeze &amp;&amp; room == room2)
{
    draw_sprite_ext(sprWhite,0,0,0,1576,1576,0,c_white,cutsceneAlpha);
    cutsceneAlpha-=0.09;
    if(cutsceneAlpha &lt;= 0.01)
        obstaclesRemoved = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
